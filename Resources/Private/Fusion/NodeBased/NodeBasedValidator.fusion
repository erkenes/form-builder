prototype(Neos.Form.Builder:NodeBasedValidator) < prototype(Neos.Fusion:Renderer) {
    element {
        @context.validator = ${this}
        options.@process.addNodeProperties = ${Neos.Form.Builder.Node.mergeProperties(value, validatorNode)}
    }
}

prototype(Neos.Form.Builder:NodeBasedValidatorCollection) < prototype(Neos.Fusion:Loop) {
    itemName = 'validatorNode'
    itemRenderer = Neos.Fusion:Case {
        formElementTypeFromNodeType {
            condition = ${!Neos.Node.nodeType(validatorNode).options.form.formElementType}
            renderer = Neos.Form.Builder:NodeBasedValidator {
                type = ${validatorNode.nodeTypeName.value + '.Definition'}
            }
        }

        default {
            condition = ${true}
            renderer = Neos.Form.Builder:NodeBasedValidator {
                type = 'Neos.Form.Builder:Validator.Definition'
                element.formElementType = ${Neos.Node.nodeType(validatorNode).options.form.formElementType}
            }
        }
    }
}
